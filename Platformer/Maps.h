#pragma once
/*
Тут находятся объявления карт.
Одна карта - один массив.
Что дает карта:
	Объекты, и все их свойства
*/

#include "ClassObject.h"

using namespace sf;

/*
Правила написания объектов на карту:
Первой всегда идет карта/карты, затем уже все объекты
Ширина и высота физической модели не должны быть меньше 5!
Визуальная составляющая объекта не всегда может совпадать с физической

Описание каждого объекта:
1) Должен ли персонаж впринципе пересекать физическую модель этого объекта
2) Файл из которого берется текстура
3) Положение модели на карте по Х
4) Положение модели на карте по Y
5) Точка X начала текстуры в файле
6) Точка Y начала текстуры в файле
7) Ширина текстуры вырезаемой из файла
8) Высота текстуры вырезаемой из файла
9) Нужна ли маска для текстуры (сделать белый цвет прозрачным)
10) Положение физической модели в текстуре по Х
11) Положение физической модели в текстуре по Y
12) Ширина физической в текстуре модели
13) Высота физической в текстуре модели
14) true-Объект пересекается любым способом
15) true-Объект пересекается прыжком
16) true-Объект пересекается любым прыжком
17) true-Объект пересекается скольжением
18) true-Объект пересекается вприсяди
19) Сцепление внутри физической модели объекта, чтобы имело смысл стоит поставить в true 14||15||16||17||18
20) Является ли объект "следящим"?
21) Коэффициент "слежения"

Примеры можно найти в массиве;
*/
Object map1[] = {
	Object(false, "Maps/TestMap4.png", 0, 0, 0, 0, 4000, 2250, false, 0, 0, 4000, 2250, true, false, false, false, 1, false, 0),
	Object(true, "Objects/Tree.png", 1700, 330, 0, 0, 167, 210, true, 45, 160, 35, 35, false, false, false, false, 1, false, 0),
	Object(true, "Objects/Tree.png", 1750, 350, 0, 0, 167, 210, true, 45, 160, 35, 35, false, false, false, false, 1, false, 0),
	Object(true, "Objects/Obstacles.png", 910, 470, 0, 0, 5, 5, true , 0, 0, 511, 22, false, false, false,false, 1, false, 0)		//Пример невидимого объекта, у которого физическая модель больше графической(Попробуй с площадки, на которой спаунится персонаж пойти наверх.)
};
const unsigned short int lengthMap1 = sizeof(map1) / sizeof(map1[0]);	//Функция автоматического подсчета количества элементов в массиве
